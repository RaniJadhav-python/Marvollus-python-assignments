import os
import time
import psutil 
import urllib2
import smtplib
import schedule
from sys import *
from email import encoders
from email.mime.text import MIMEText 
from email.mime.base import MIMEBase
from email.MIME.multipart import MIMEMultipart

def is_connected():
	try:
		urllib2.urlopen('http://216.58.192.142', timeout=1)
		return True
	except urllib2.URLError as err:
		return False
		
def MailSender(filename, time):
	try:
		fromaddr="ranijadhaventc24@gmail.com"
		toaddr = "ranijadhav.siemens@gmail.com"
		
		msg = MIMEMultipart()
		msg['from'] = fromaddr
		msg['To']= toaddr
		
		body= """ This is first try to send automatic mail with information of 
		process logs on machine.
		Log file is created at: %s
		This is an autogenerated mail. Please don't reply""" %(toaddr, time)
		
		Subject= """
		Automated Process log generated at: %s""" %(time)
		
		msg['Subject']= Subject
		msg.attach(MIMEText(body, 'plain'))
		attachement= open(filename, "rb")
		p = MIMEBase('application', 'octet-stream')
		p.set_payload((attachement).read())
		encoders.encode_base64(p)
		p.add_header('Content-Disposition', "attachement; filename=%s" %filename)
		msg.attach(p)
		s = smtplib.SMTP('smtp.gmail.com', 587)
		s.starttls()
		s.login(fromaddr, "---------")
		text = msg.as_string()
		s.sendmail(fromaddr,toaddr,text)
		s.quit()
		
		print("Log file successfully sent through mail")
		
	except Exception as E:
		print("Unable to send the mail", E)
		
def ProcessLog(Log_dir= 'Siemens'):
	listprocess = []
	
	if not os.path.exists(log_dir):
		try:
			os.mkdir(log_dir)
		except:
			pass
			
	seperator= "-"*80
	log_path = os.path.join(log_dir, "SiemensLog%s.log"%(time.ctime()))
	f= open(log_path, 'w')
	f.write(seperator + "\n")
	f.write("Siemens Processor Log: "+time.ctime() + "\n")
	f.write(seperator + "\n")
	f.write("\n")
		
	for proc in psutil.process_iter():
		try:
			pinfo = proc.as_dict(attrs= ['pid', 'name', 'usermane'])
			vms = proc.memory_info().vms/(1024*1024)
			pinfo['vms']= vms
			listprocess.append(pinfo);
		except(psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
			pass
				
	for element in listprocess:
		f.write("%s\n " %element)
				
	print("Log file is successfully generated at location %s",(log_path))
			
	connected = is_connected
			
	if connected:
		startTime = time.time()
		Mailsender(gmail_user, gmail_password)
		endTime = time.time()
		print('Took %s seconds to evaluate.' %(endTime- startTime))
				 
	else:
		print("There is no internet connection")
			
def main():
	print("Application name: "+argv[0])
	
	if(len(argv)!=2):
		print("Error: Invalid number of arguments")
		exit()
		
	if(argv[1]== --"-h")or (argv[1]== "-H"):
		print("This script is used to log record of running proceses")
		exit()
		
	if(argv[1]== --"-u")or (argv[1]== "-U"):
		print("usage: ApplicationName AbsolutePath_of_Directory")
		exit()
		
	try:
		scedule.every(int(argv[1])).minutes.do(ProcessLog)
		while True:
			scedule.run_pending()
			time.sleep(1)
	except ValueError:
		print("Error: Invalid datatypevof input")
		
	except Exception as E:
		print("Error: Invalid input", E)
		
if __name__ == "__main__":
	main()
	
		
	
		
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
























